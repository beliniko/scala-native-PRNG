package main.scala

import prng.XORShift
import prng.LinearCongruentialGenerator
import prng.MersenneTwister
import benchmark.EqualDistribution
object Main {
  def main(args: Array[String]): Unit =
    val randomXORShift = XORShift.seqOfInt(0, 9, 10)
    println(s"Random numbers generated by XORShift: $randomXORShift")
    val randomLCG = LinearCongruentialGenerator.seqOfInt(0, 9, 10)
    println(s"Random number generated by LinearCongruentialGenerator: $randomLCG")
    val randomMT = MersenneTwister.seqOfInt(0, 9, 10)
    println(s"Random number generated by MersenneTwister: $randomMT")

    val ChiSquareXORShift = EqualDistribution.calculateChiSquareTest(XORShift.seqOfInt(0, 14, 100000), 15)
    println(s"Chi-Square-Test for XORShift: $ChiSquareXORShift")

}
